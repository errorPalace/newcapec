<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <link rel="stylesheet" href="../css/common.css"/>
    <link rel="stylesheet" href="../css/framework7.ios.min.css"/>
    <link rel="stylesheet" href="../css/main.css"/>
    <title>交易明细</title>
    
</head>
<body>
<!-- Status bar overlay for full screen mode (PhoneGap) -->
<div class="statusbar-overlay"></div>
<!-- Views -->
<div class="views">
    <div id="mainView"  class="view view-main">
        <div class="navbar">
            <div class="navbar-inner">
                <div class="left">
                    <a href="#" class="link">
                       <!-- <i class="icon icon-back"></i>-->
                    </a>
                </div>
                 <div id="tradeNavText" class="center">
                    <a href="#" >交易明细</a>
                    <i class="nav_icon_down"></i>
                </div>
                <div class="right">
                
                </div>
            </div>
        </div>

        <div class="pages navbar-through">
            <div class="page" data-page="tradeDetail">
                 <div id="trade_box" class="page-content pull-to-refresh-content infinite-scroll" data-distance="100"> <!-- infinite-scroll -->
                    <div class="pull-to-refresh-layer">
                        <div class="preloader"></div>
                        <div class="pull-to-refresh-arrow"></div>
                    </div>
                    <div class="list-block media-list">
                        <ul style="display: none">

                        </ul>
                    </div>
                    <!-- 加载提示符 -->
                    <div class="infinite-scroll-preloader" style="display:none;">
                        <div class="preloader"></div>
                    </div>
                    
                </div>
            </div>
        </div>

    </div>
</div>

<script type="text/template7" id="tradeListTemplate">
    {{#if isFirstLoad}}
    <li class="list-group-title border1">{{month}}月
        <span class="item-subtext "></span>
    </li>
    {{/if}}
    {{#each items}}
    <li class="item-content">
        <div class="item-inner">
            <div class="item-title-row">
                <div class="item-title">{{description}}({{termName}})</div>
                <div class="item-after">
                    {{#if flag}}
                    <span class="badge-price">-{{currency opfare}}</span>
                    {{else}}
                    <span class="badge-price green">+{{currency opfare}}</span>
                    {{/if}}

                </div>
            </div>
            <div class="item-subtitle min-text">{{opdt}}
                <span class="item-subtext orange"></span>
            </div>
        </div>
    </li>
    {{/each}}
</script>
<script  type="text/template7" id="tradeOptionTemplate">
    <div class="popover popover-links tradeOption">
        <div class="popover-angle"></div>
        <div class="popover-inner">
            <div class="list-block">
                <ul>
                    {{#each this}}
                    <li data-begindate="{{beginDate}}" data-enddate="{{endDate}}" data-month="{{month}}"><a href="#" class="list-button item-link" >{{text}}</a></li>
                    {{/each}}
                </ul>
            </div>
        </div>
    </div>
</script>


<script type="text/javascript" src="../libs_android/moment.min.js"></script>
<script type="text/javascript" src="../libs_android/framework7.min.js"></script>
<script type="text/javascript">
    var myApp = new Framework7({swipePanel:'left',modalButtonOk:'确定',
        modalButtonCancel:'取消',
        modalTitle:"",});

    var mainView = myApp.addView('.view-main');
    var $$ = Dom7,T7 = Template7;

     function  currency(value){
        var f1 = value;
        var f2 = (Math.round((f1-0) * 100)) / 100;
        f2 = Math.floor(f2) == f2 ? f2 + ".00" : (Math.floor(f2 * 10) == f2 * 10) ? f2 + '0' : f2;
        f2 = String(f2);
        var r = /(\d+)(\d{3})/;
        var fs = String(f2);
        while (r.test(f2)) {
            f2 = f2.replace(r, '$1' + ',' + '$2');
        }
        return f2;
    }
    T7.registerHelper('currency',function(value){
        return currency(value);
    });

    var _xykApi ={
            trade:function(params,success){
                   $$.ajax({
                        url: "/YKT_Inteface/xyk.action",
                        method: 'POST',
                        data: params,
                        dataType: 'json',
                        timeout:25*1000,
                        success: function(result){
                            if(result &&  result.data){
                                success(result);
                            }else{
                                myApp.alert(result.message);
                                myApp.hideIndicator();
                            }
                        },
                        error: function(xhr,status){
                            myApp.alert("服务器返回异常:"+xhr.status);
                            myApp.hideIndicator();
                        }
                }) 
            }

    };

    var getMonthStartEndDay = function(num){
            if(!/\d+/.test(num)){
                num = 4;
            }
            var format = "YYYY-MM-DD",
                data= [];

            for(var i= 0;i<num;i++){
               var  m = moment().subtract(i,'M'),
                        year = m.year(),
                        month  = m.month()>=9?m.month()+1:"0"+(m.month()+1);
               var beginDate = year + "-"+month+"-01",
                   endDate = m.endOf('month').format("YYYY-MM-DD");

               var obj={
                    beginDate:beginDate,
                    endDate:endDate,
                    text:year+"年"+(m.month()+1)+"月",
                    month:(m.month()+1)
                   }; 

                 data.push(obj);  
            }    
            return data;
            
    }


   var  renderTplById =function(tplId,renderData){
            var markup =  $$("#"+tplId).html();
            var compiledTemplate = T7.compile(markup);
            var output = compiledTemplate(renderData);
            return output;
    }


    


     //交易明细模块
    var trade = {
        //设置上拉加载 最多条数
        MAX_ITEM: 100,
        //当前条数
        items: 0,
        //每次请求的条数(第一次获取全部)
        pagesize: 10,
        //当月是否全部加载  或者  是否是最后一页(包含 当前条数大于设置的最大条数)
        isLast: false,
        init: function () {
            this.initParams();
            this.bindData();
            this.bingEvent();
        },
        bindData: function () {
            this.getTradeList();
        },
        /**
         * 
         */
        initParams: function (params) {

            var that = this,
                m = moment(),
                year = m.year(),
                month = m.month() >= 9 ? m.month() + 1 : "0" + (m.month() + 1);
            var beginDate = year + "-" + month + "-01",
                endDate = moment().endOf('month').format("YYYY-MM-DD");

            this.items = 0;
            this.isLast = false;

            params = params || {
                    beginDate: beginDate,
                    endDate: endDate,
                    month: (m.month() + 1),
                    text: year + "年" + (m.month() + 1) + "月"
                };
            params['beginIndex'] = 0;
            params['pageSize'] = that.pagesize;
            params['currPage'] =1;

            this.params = params;
        },
        getTradeList: function (append, callback) {
            myApp.showIndicator();

            typeof  append == 'function' && (callback = append, append = false );
            var that = this;

            this.params || this.initParams();
            var p = {};
            for (var i in that.params)p[i] = that.params[i];

            p['beginIndex'] = that.items;
            p['currPage'] = this.params['currPage']++;
            delete p['month'];
            delete p['text'];

            console.log(JSON.stringify(p));

            /*var result = {
                message:'success',
                data:[{"description":"餐费支出","flag":1,"opdt":"2015-11-18 08:29:55","opfare":"2.80","termName":"pos7","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-17 12:12:34","opfare":"0","termName":"pos11","type":0},{"description":"冻结金额转入","flag":0,"opdt":"2015-11-13 14:27:36","opfare":"23.90","termName":"人力制卡","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-13 12:21:02","opfare":"0","termName":"pos11","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-12 12:08:12","opfare":"0","termName":"pos11","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-12 08:37:54","opfare":"4.40","termName":"pos7","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-11 12:17:59","opfare":"0","termName":"pos11","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-11 08:37:22","opfare":"3.20","termName":"pos7","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-10 12:15:31","opfare":"0","termName":"pos11","type":0},{"description":"餐费支出","flag":1,"opdt":"2015-11-10 08:38:37","opfare":"4.60","termName":"pos7","type":0}]
            };

            that.items = that.items + result.data.length;
            that.render(result.data, append);
            
            callback && callback(result);
            return ;*/

            _xykApi.trade(p, function (result) {
                //if (result._result == true) {
                if (result.data) {
                    that.items = that.items + result.data.length;
                    that.render(result.data, append);
                    callback && callback(result);
                }else{
                    myApp.alert(JSON.stringify(result));
                    myApp.hideIndicator();
                }
                     /**
                     * 临时解决方案（兼容迪科）
                     * 交易明细 返回该提示说明没有记录(有待考究)
                     */
               /* } else {
                   
                    if (result._message == '数据获取失败') {
                        that.render([], append);
                        callback && callback(result);
                    } else {
                        myApp.alert(result._message);
                    }
                    myApp.hideIndicator();
                }*/
            });
        },
        render: function (data, append) {
            var that = this,
                $all = $$("#trade_box").find(".media-list ul");

            if (that.items == 0) {//说明当月没有记录

                var tip = '<div class="content-block">' +
                    ' <div class="content-block-inner">暂时还没有记录</div>' +
                    '</div>';

                $all.html(tip);
            } else {
                var isFirstLoad = that.items > that.pagesize ? false : true;

                var regP = /^\+/;

                for (var i = 0; i < data.length; i++) {
                    var _t = data[i];
                    if (typeof _t.flag == 'undefined') {
                        if (regP.test(_t.opfare)) {//0 充值  1 消费
                            data[i].flag = 0;
                            data[i].opfare = _t.opfare.replace(/\+/g, '');
                        } else {
                            data[i].flag = 1;
                            data[i].opfare = _t.opfare.replace(/-/g, '');
                        }
                    }
                }

                var _d = {
                    isFirstLoad: isFirstLoad,
                    items: data,
                    month: that.params.month
                }
                var AllContent = renderTplById('tradeListTemplate', _d);
                if (!!append) {
                    $all.append(AllContent);
                } else {
                    $all.html(AllContent);
                }
            }

            if (data && (data.length < that.pagesize)) {
                //断开对应的加载绑定
                that.detachScroll();
            } else {
                that.showLoadMore(true);
            }
            $all.show();
            $$('#tradeNavText').find('a').text(that.params.text + "记录");
            myApp.getScroller().refresh();
            myApp.hideIndicator();
        },
        /**
         * 断开  加载更多
         */
        detachScroll: function () {
            var that = this,
                iscroll = $$("#trade_box");

            that.isLast = true;
            // 加载完毕，则注销无限加载事件，以防不必要的加载
            myApp.detachInfiniteScroll(iscroll);

            that.showLoadMore(false);
        },
        /**
         * 打开 加载更多
         */
        attchScroll: function () {
            var that = this,
                iscroll = $$("#trade_box");

            that.isLast = false;
            myApp.attachInfiniteScroll(iscroll);

            //that.showLoadMore(true);
        },
        //显示或隐藏 加载更多图标
        showLoadMore: function (flag) {
            var load = $$("#trade_box").find('.infinite-scroll-preloader');
            if (flag) {
                load.show();
            } else {
                load.hide();
            }
        },
        bingEvent: function () {
            var that = this;

            var ptrContent = $$("#trade_box");
            ptrContent.on('refresh', function (e) {
                setTimeout(function () {
                    var _p = that.params;

                    that.initParams(_p);//刷新 当月

                    that.getTradeList(function () {
                        ptrContent.scrollTop(0);
                        myApp.pullToRefreshDone();
                    })
                    //打开加载更多(之前可能断开)
                    that.attchScroll();
                }, 500);
            });

            var iscroll = $$("#trade_box"),
                loading = false;
            iscroll.on('infinite', function (e) {
                if (loading)return;
                loading = true;
                setTimeout(function () {
                    that.getTradeList(true, function () {
                        if (that.items > that.MAX_ITEM) {
                            that.detachScroll();
                        }
                        loading = false;
                    });
                }, 500);
            });

            var options = $$('#tradeNavText');
            options.on('click', function (e) {
                var navObj = this;
                if ($$(".tradeOption").length <= 0) {
                    var output = renderTplById('tradeOptionTemplate', getMonthStartEndDay(4));
                    $$('body').append(output);

                    $$(document).on('click', '.tradeOption li', function (e) {
                        ptrContent.scrollTop(0);
                        //初始化参数
                        that.initParams({
                            beginDate: $$(this).data('begindate'),
                            endDate: $$(this).data('enddate'),
                            month: $$(this).data('month'),
                            text: $$(this).find("a").text()
                        });
                        //获取数据
                        that.getTradeList();
                        //打开加载更多(之前可能断开)
                        that.attchScroll();
                        //关闭 弹层
                        myApp.closeModal('.tradeOption');
                    })
                }
                setTimeout(function () {
                    myApp.popover('.tradeOption', navObj);
                }, 100);
            });


        }
    };


    trade.init();

</script>
</body>
</html>