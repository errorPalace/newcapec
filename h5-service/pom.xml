<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.newcapec.campus.h5</groupId>
	<artifactId>campus-h5-service</artifactId>
	<!--SNAPSHOT(不稳定版) RELEASE(稳定版) -->
	<version>1.0.0-SNAPSHOT</version>
	<name>H5服务管理平台</name>
	<url>http://www.newcapce.net</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
		<v3.build.timestamp>${maven.build.timestamp}</v3.build.timestamp>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
	</properties>
	<dependencies>
		<!--定时器-->
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-quartz</artifactId>
			<version>3.5.0-SNAPSHOT</version>
			<classifier>v3</classifier>
			<type>jar</type>
		</dependency>
		<!-- =============redis客戶端============= -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.7.2</version>
		</dependency>
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-core</artifactId>
			<version>3.5.2-SNAPSHOT</version>
			<classifier>v3</classifier>
			<type>jar</type>
		</dependency>
				<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-security-app</artifactId>
			<version>3.5.1-SNAPSHOT</version>
			<classifier>v3</classifier>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.newcapec.vas</groupId>
			<artifactId>vas-protocol</artifactId>
			<version>2.5.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-iam</artifactId>
			<version>3.5.0-SNAPSHOT</version>
			<classifier>v3</classifier>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-style-blueashes</artifactId>
			<version>3.5.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<!-- <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.0.1</version>
		</dependency> -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>
		<dependency>
			<groupId>net.newcapec.v3</groupId>
			<artifactId>v3-upload</artifactId>
			<version>3.5.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.18.1-GA</version>
		</dependency>
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.11</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>public</id>
			<name>Public Repositories</name>
			<url>http://192.168.0.203:8000/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>Public Repositories</name>
			<url>http://192.168.0.203:8000/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<distributionManagement>
		<repository>
			<id>v3-releases</id>
			<name>privilege</name>
			<url>http://192.168.0.203:8000/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>v3-snapshots</id>
			<name>privilege</name>
			<url>http://192.168.0.203:8000/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- 根据不同的环境使用不同的配置文件,使用方法： 'mvn clean package -P test' 不添加参数-P默认为dev -->
	<profiles>
		<profile>
			<!-- 本地开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<!-- 生产环境 -->
			<id>production</id>
			<properties>
				<profiles.active>production</profiles.active>
			</properties>
		</profile>
	</profiles>
	<build>
		<finalName>${project.artifactId}</finalName>
		<defaultGoal>package</defaultGoal>
		<resources>
			<resource>  
                <directory>src/main/java</directory>  
                <includes>  
                    <include>**/*.cer</include>  
                </includes>  
                <!-- 是否替换资源中的属性-->  
                <filtering>false</filtering>  
            </resource>  
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>META-INF/v3.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>META-INF/v3.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<classesDirectory>target/classes </classesDirectory>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<outputDirectory>target</outputDirectory>
					<!--<encoding>UTF-8</encoding>-->
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>v3</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warName>${project.artifactId}-${project.version}</warName>
					<!-- 释放将项目的类文件打成jar放到lib目录中。 打成jar的好处是：只修改class时，可以只更新jar。 -->
					<archiveClasses>true</archiveClasses>
					<webResources>
						<resource><!-- 打包，打入V3的web工程公共配置文件 -->
							<directory>src/main/config</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<filtering>true</filtering>
							<excludes>  
				                <exclude>test/*</exclude>  
				                <exclude>production/*</exclude>  
				                <exclude>dev/*</exclude>  
				            </excludes>  
						</resource>
						<resource><!-- 根据不同的环境，把相关的配置打入包中 -->
							<directory>src/main/config/${profiles.active}</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<webAppConfig>
	                   	<extraClasspath>src/main/config,src/main/config/${profiles.active}</extraClasspath>
						<defaultsDescriptor>webdefault.xml</defaultsDescriptor>
                   	</webAppConfig>
					<!-- 增加systemProperties属性 -->
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.jetty.Request.maxFormContentSize</name>
							<!-- -1代表不作限制 -->
							<value>-1</value>
						</systemProperty>
					</systemProperties>

					<scanIntervalSeconds>0</scanIntervalSeconds>
					<contextPath>/</contextPath>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8002</port>
						</connector>
						<connector implementation="org.mortbay.jetty.security.SslSocketConnector">
							<port>8444</port>
							<keystore>${project.basedir}/ifaceserver.keystore</keystore>
							<password>newcapec_iface</password>
							<keyPassword>newcapec_iface</keyPassword>
						</connector>
					</connectors>
					<webDefaultXml>webdefault.xml</webDefaultXml>
					<reload>manual</reload>
				</configuration>
			</plugin>
			<!-- <plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.16.v20140903</version>
				<configuration>
					增加systemProperties属性
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.jetty.Request.maxFormContentSize</name>
							-1代表不作限制
							<value>-1</value>
						</systemProperty>
					</systemProperties>

					<scanIntervalSeconds>0</scanIntervalSeconds>
					<contextPath>/</contextPath>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8001</port>
						</connector>
						<connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector">  
	       					<port>8443</port>  
					       	<keystore>${project.basedir}/h5service.keystore</keystore>
					       	<password>newcapec_iface</password>  
					       	<keyPassword>newcapec_iface</keyPassword>  
					    </connector>  
					</connectors>
					<webDefaultXml>webdefault.xml</webDefaultXml>
					<reload>manual</reload>
				</configuration>
			</plugin> -->
		</plugins>
	</build>
	<packaging>war</packaging>
</project>